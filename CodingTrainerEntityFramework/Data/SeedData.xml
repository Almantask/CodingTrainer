<?xml version="1.0" encoding="utf-8"?>
<ArrayOfChapter xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/CodingTrainer.CodingTrainerModels">
  <Chapter>
    <ChapterName>Playground</ChapterName>
    <ChapterNo>-1</ChapterNo>
    <Description i:nil="true" />
    <Exercises>
      <Exercise>
        <AssessmentGroups />
        <ChapterNo>-1</ChapterNo>
        <ExerciseName>Playground</ExerciseName>
        <ExerciseNo>-1</ExerciseNo>
      </Exercise>
    </Exercises>
  </Chapter>
  <Chapter>
    <ChapterName>Hello World</ChapterName>
    <ChapterNo>1</ChapterNo>
    <Description>Write your first C# program!</Description>
    <Exercises>
      <Exercise>
        <AssessmentGroups>
          <AssessmentGroup>
            <AssessmentGroupId>1</AssessmentGroupId>
            <Assessments>
              <AssessmentBase xmlns:d6p1="http://schemas.datacontract.org/2004/07/CodingTrainer.CSharpRunner.Assessment.Methods.ByRunning" i:type="d6p1:CheckAllOutputAssessment">
                <AbortOnFail>false</AbortOnFail>
                <AssessmentGroupId>1</AssessmentGroupId>
                <Sequence>2</Sequence>
                <Title>All - 0.9 accuracy</Title>
                <ConsoleInText xmlns="http://schemas.datacontract.org/2004/07/CodingTrainer.CSharpRunner.Assessment">blah</ConsoleInText>
                <d6p1:ExpectedResult>
Enter some text
blah
You entered: blah
                </d6p1:ExpectedResult>
                <d6p1:RequiredAccuracy>0.9</d6p1:RequiredAccuracy>
              </AssessmentBase>
              <AssessmentBase xmlns:d6p1="http://schemas.datacontract.org/2004/07/CodingTrainer.CSharpRunner.Assessment.Methods.ByRunning" i:type="d6p1:CheckLastLineOfOutputAssessment">
                <AbortOnFail>false</AbortOnFail>
                <AssessmentGroupId>1</AssessmentGroupId>
                <Sequence>1</Sequence>
                <Title>Last Line</Title>
                <ConsoleInText xmlns="http://schemas.datacontract.org/2004/07/CodingTrainer.CSharpRunner.Assessment">blah</ConsoleInText>
                <d6p1:ExpectedResult>You entered: blah</d6p1:ExpectedResult>
                <d6p1:RequiredAccuracy>0.9</d6p1:RequiredAccuracy>
              </AssessmentBase>
            </Assessments>
            <ChapterNo>1</ChapterNo>
            <ExerciseNo>1</ExerciseNo>
            <Sequence>1</Sequence>
          </AssessmentGroup>
        </AssessmentGroups>
        <ChapterNo>1</ChapterNo>
        <ExerciseName>Read line Write line</ExerciseName>
        <ExerciseNo>1</ExerciseNo>
      </Exercise>
      <Exercise>
        <AssessmentGroups />
        <ChapterNo>1</ChapterNo>
        <ExerciseName>Divide By Zero</ExerciseName>
        <ExerciseNo>2</ExerciseNo>
      </Exercise>
      <Exercise>
        <AssessmentGroups />
        <ChapterNo>1</ChapterNo>
        <ExerciseName>Hello world</ExerciseName>
        <ExerciseNo>3</ExerciseNo>
      </Exercise>
    </Exercises>
  </Chapter>
  <Chapter>
    <ChapterName>Development</ChapterName>
    <ChapterNo>2</ChapterNo>
    <Description>For development of assessments</Description>
    <Exercises>
      <Exercise>
        <AssessmentGroups />
        <ChapterNo>2</ChapterNo>
        <ExerciseName>Hello world</ExerciseName>
        <ExerciseNo>1</ExerciseNo>
      </Exercise>
      <Exercise>
        <AssessmentGroups>
          <AssessmentGroup>
            <AssessmentGroupId>2</AssessmentGroupId>
            <Assessments>
              <AssessmentBase xmlns:d6p1="http://schemas.datacontract.org/2004/07/CodingTrainer.CSharpRunner.Assessment.Methods.ByInspection" i:type="d6p1:SyntaxTokensLinqAssessment">
                <AbortOnFail>false</AbortOnFail>
                <AssessmentGroupId>2</AssessmentGroupId>
                <Sequence>3</Sequence>
                <Title>Has 2 Parse( methods</Title>
                <d6p1:Condition>(tokens.Where(Text == "Parse" &amp;&amp; GetNextToken(false, false, false, false).Text == "(").Count()) == 2</d6p1:Condition>
              </AssessmentBase>
              <AssessmentBase xmlns:d6p1="http://schemas.datacontract.org/2004/07/CodingTrainer.CSharpRunner.Assessment.Methods.ByInspection" i:type="d6p1:AncestorNodeForEveryTokenLinqAssessment">
                <AbortOnFail>false</AbortOnFail>
                <AssessmentGroupId>2</AssessmentGroupId>
                <Sequence>4</Sequence>
                <Title>Is part of assignment</Title>
                <d6p1:ParentCondition>parentNode.RawKind == syntaxKind.Value("SimpleAssignmentExpression")</d6p1:ParentCondition>
                <d6p1:TokenSelector>tokens.Where(Text == "Parse" &amp;&amp; GetNextToken(false, false, false, false).Text == "(")</d6p1:TokenSelector>
              </AssessmentBase>
              <AssessmentBase xmlns:d6p1="http://schemas.datacontract.org/2004/07/CodingTrainer.CSharpRunner.Assessment.Methods.ByInspection" i:type="d6p1:SyntaxTreeScriptAssessment">
                <AbortOnFail>false</AbortOnFail>
                <AssessmentGroupId>2</AssessmentGroupId>
                <Sequence>5</Sequence>
                <Title>NEW has 2x Parse</Title>
                <d6p1:Script>var nodes = Nodes.Where(n =&gt; n.GetText().ToString().Trim() == "Parse"); return nodes.Count() == 2;</d6p1:Script>
              </AssessmentBase>
              <AssessmentBase xmlns:d6p1="http://schemas.datacontract.org/2004/07/CodingTrainer.CSharpRunner.Assessment.Methods.ByInspection" i:type="d6p1:SyntaxTreeScriptAssessment">
                <AbortOnFail>false</AbortOnFail>
                <AssessmentGroupId>2</AssessmentGroupId>
                <Sequence>6</Sequence>
                <Title>NEW Parse has ()</Title>
                <d6p1:Script>return nodes.All(n =&gt; n.ChildTokens().First().GetNextToken().Text == "(");</d6p1:Script>
              </AssessmentBase>
              <AssessmentBase xmlns:d6p1="http://schemas.datacontract.org/2004/07/CodingTrainer.CSharpRunner.Assessment.Methods.ByInspection" i:type="d6p1:SyntaxTreeScriptAssessment">
                <AbortOnFail>false</AbortOnFail>
                <AssessmentGroupId>2</AssessmentGroupId>
                <Sequence>7</Sequence>
                <Title>NEW is part of =</Title>
                <d6p1:Script>return TreeHelper.NodesOnRightOfEquals(nodes);</d6p1:Script>
              </AssessmentBase>
              <AssessmentBase xmlns:d6p1="http://schemas.datacontract.org/2004/07/CodingTrainer.CSharpRunner.Assessment.Methods.ByRunning" i:type="d6p1:CheckLastLineOfOutputAssessment">
                <AbortOnFail>false</AbortOnFail>
                <AssessmentGroupId>2</AssessmentGroupId>
                <Sequence>1</Sequence>
                <Title>Last line is correct</Title>
                <ConsoleInText xmlns="http://schemas.datacontract.org/2004/07/CodingTrainer.CSharpRunner.Assessment">5
3
                </ConsoleInText>
                <d6p1:ExpectedResult>The answer is 8</d6p1:ExpectedResult>
                <d6p1:RequiredAccuracy>1</d6p1:RequiredAccuracy>
              </AssessmentBase>
              <AssessmentBase xmlns:d6p1="http://schemas.datacontract.org/2004/07/CodingTrainer.CSharpRunner.Assessment.Methods.ByRunning" i:type="d6p1:LastLineLinqAssessment">
                <AbortOnFail>false</AbortOnFail>
                <AssessmentGroupId>2</AssessmentGroupId>
                <Sequence>2</Sequence>
                <Title>Linq test</Title>
                <ConsoleInText xmlns="http://schemas.datacontract.org/2004/07/CodingTrainer.CSharpRunner.Assessment">43
56
                </ConsoleInText>
                <d6p1:Condition>output.EndsWith("99")</d6p1:Condition>
              </AssessmentBase>
            </Assessments>
            <ChapterNo>2</ChapterNo>
            <ExerciseNo>2</ExerciseNo>
            <Sequence>1</Sequence>
          </AssessmentGroup>
        </AssessmentGroups>
        <ChapterNo>2</ChapterNo>
        <ExerciseName>Add two numbers</ExerciseName>
        <ExerciseNo>2</ExerciseNo>
      </Exercise>
      <Exercise>
        <AssessmentGroups />
        <ChapterNo>2</ChapterNo>
        <ExerciseName>In development</ExerciseName>
        <ExerciseNo>3</ExerciseNo>
      </Exercise>
    </Exercises>
  </Chapter>
  <Chapter>
    <ChapterName>While Loops</ChapterName>
    <ChapterNo>3</ChapterNo>
    <Description i:nil="true" />
    <Exercises>
      <Exercise>
        <AssessmentGroups />
        <ChapterNo>3</ChapterNo>
        <ExerciseName>The next chapter</ExerciseName>
        <ExerciseNo>1</ExerciseNo>
      </Exercise>
    </Exercises>
  </Chapter>
</ArrayOfChapter>